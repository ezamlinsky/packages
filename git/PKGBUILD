################################################################################
# Encoding: UTF-8                                                  Tab size: 4 #
#                                                                              #
#                  ARCH LINUX PACKAGE BUILD DESCRIPTION FILE                   #
#                                                                              #
# Ordnung muss sein!                             Copyleft (Æ†) 2019, Arch Linux #
################################################################################
# Maintainer: Jack Black <ezamlinsky@gmail.com>

#==============================================================================#
#       Package information                                                    #
#==============================================================================#
pkgname=('git')
pkgver=2.24.0
pkgrel=1
pkgdesc='The fast distributed version control system'
url='https://git-scm.com/'
license=('GPL2')
arch=('x86_64')

#==============================================================================#
#       Package dependencies                                                   #
#==============================================================================#
depends=(
	'bash'
	'curl'
	'expat'
	'glibc'
	'grep'
	#'libgnome-keyring'
	#'libsecret'
	'openssh'
	'openssl'
	#'pcre'
	'pcre2'
	'perl'
	'shadow'
	#'tcl'
	'zlib'
)
makedepends=(
	'asciidoc'
	'python2'
	'xmlto'
)
optdepends=(
	'tk: gitk and git gui'
	'perl-libwww: git svn'
	'perl-term-readkey: git svn'
	'perl-mime-tools: git send-email'
	'perl-net-smtp-ssl: git send-email TLS support'
	'perl-authen-sasl: git send-email TLS support'
	'perl-mediawiki-api: git mediawiki support'
	'perl-datetime-format-iso8601: git mediawiki support'
	'perl-lwp-protocol-https: git mediawiki https support'
	'perl-cgi: gitweb (web interface) support'
	'python2: various helper scripts'
	'subversion: git svn'
	'gnome-keyring: GNOME keyring credential helper'
)

#==============================================================================#
#        Package relations                                                     #
#==============================================================================#
provides=('git-core')
replaces=('git-core')

#==============================================================================#
#       Package miscellaneous options                                          #
#==============================================================================#
install='git.install'

#==============================================================================#
#       Package sources and integrity                                          #
#==============================================================================#
source=(
	"https://www.kernel.org/pub/software/scm/git/git-$pkgver.tar.xz"
	"https://www.kernel.org/pub/software/scm/git/git-$pkgver.tar.sign"
	'git-daemon@.service'
	'git-daemon.socket'
	'git-sysusers.conf'
)
sha256sums=(
	'9f71d61973626d8b28c4cdf8e2484b4bf13870ed643fed982d68b2cfd754371b'
	'SKIP'
	'14c0b67cfe116b430645c19d8c4759419657e6809dfa28f438c33a005245ad91'
	'ac4c90d62c44926e6d30d18d97767efc901076d4e0283ed812a349aece72f203'
	'7630e8245526ad80f703fac9900a1328588c503ce32b37b9f8811674fcda4a45'
)

#==============================================================================#
#       Package preparation sequence                                           #
#==============================================================================#
prepare() {

	# Change directory to source directory
	cd $pkgname-$pkgver

	# Generate configure script
	make configure
}

#==============================================================================#
#       Package building sequence                                              #
#==============================================================================#
build() {

	# Change directory to source directory
	cd $pkgname-$pkgver

	# Default configure options
	config_opts=(
		'--prefix=/usr'
		'--bindir=/usr/bin'
		'--sbindir=/usr/bin'
		'--libdir=/usr/lib'
		'--libexecdir=/usr/lib'
		'--sysconfdir=/etc'
		'--localstatedir=/var'
		'--enable-silent-rules'
		'--enable-shared'
		'--disable-static'
		'--enable-pthreads'

	# 'curl' related options
		'--with-curl'
		#'--without-curl'

	# 'expat' related options
		'--with-expat'
		#'--without-expat'

	# 'openssl' related options
		'--with-openssl'
		#'--without-openssl'

	# 'pcre2' related options
		'--with-libpcre2'
		#'--without-libpcre2'

	# 'pcre' related options
		#'--with-libpcre1'
		'--without-libpcre1'

	# 'tcl' related options
		#'--with-tcltk'
		'--without-tcltk'
	)

	# Run package configuration script
	./configure "${config_opts[@]}"

	# Set path to Python interpreter
	export PYTHON_PATH=/usr/bin/python2

	# Build package
	make all man

	# Build some nice features
	make -C contrib/diff-highlight
	make -C contrib/subtree
	make -C contrib/mw-to-git

	# Build libsecret support if required
	if check_rule 'libsecret & glib2'; then
		make -C contrib/credential/libsecret
	fi

	# Build gnome-keyring support if required
	if check_rule 'libgnome-keyring'; then
		make -C contrib/credential/gnome-keyring
	fi
}

#==============================================================================#
#       Package self testing sequence                                          #
#==============================================================================#
check() {

	# Change directory to source directory
	cd $pkgname-$pkgver

	# Set path to Python interpreter
	export PYTHON_PATH=/usr/bin/python2

	# Create directory to run the tests
	mkdir -p /dev/shm/git-test

	# Set a number of concurrent threads for some checks
	jobs=$(expr "$MAKEFLAGS" : '.*\(-j[0-9]*\).*') || true

	# Explicitly specify SHELL to avoid a test failure in t/t9903-bash-prompt.sh
	# which is caused by 'git rebase' trying to use builduser's SHELL inside the
	# build chroot (i.e.: /usr/bin/nologin)
	SHELL=/bin/sh

	# Run internal checks
	make NO_SVN_TESTS=y \
	DEFAULT_TEST_TARGET=prove \
	GIT_PROVE_OPTS="$jobs -Q" \
	GIT_TEST_OPTS="--root=/dev/shm/git-test" \
	test
}

#==============================================================================#
#       Package installation sequence                                          #
#==============================================================================#
package() {

	# Change directory to source directory
	cd $pkgname-$pkgver

	# Set path to Python interpreter
	export PYTHON_PATH=/usr/bin/python2

	# Install files
	make DESTDIR=$pkgdir install install-man

	# Enable bash completion feature for git
	mkdir -p $pkgdir/usr/share/bash-completion/completions/
	install -m 0644 ./contrib/completion/git-completion.bash $pkgdir/usr/share/bash-completion/completions/git

	# Install subtree feature
	make -C contrib/subtree DESTDIR=$pkgdir install install-man

	# Install mediawiki feature
	make -C contrib/mw-to-git DESTDIR=$pkgdir install

	# Install libsecret support if required
	if [ -f contrib/credential/libsecret/git-credential-libsecret ]; then
		install -m 0755 contrib/credential/libsecret/git-credential-libsecret \
		$pkgdir/usr/lib/git-core
	fi

	# Install gnome-keyring support if required
	if [ -f contrib/credential/gnome-keyring/git-credential-gnome-keyring ]; then
		install -m 0755 contrib/credential/gnome-keyring/git-credential-gnome-keyring \
		$pkgdir/usr/lib/git-core
	fi

	# Install systemd service file
	install -Dm644 $srcdir/git-daemon@.service $pkgdir/usr/lib/systemd/system/git-daemon@.service

	# Install systemd socket file
	install -Dm644 $srcdir/git-daemon.socket $pkgdir/usr/lib/systemd/system/git-daemon.socket

	# Install sysusers file which define special user 'git' to run git-daemon
	install -Dm644 $srcdir/git-sysusers.conf $pkgdir/usr/lib/sysusers.d/git.conf

	# Remove 'Git' directory from the FS root
	rm -fr $pkgdir/Git
}

################################################################################
#                                 END OF FILE                                  #
################################################################################
